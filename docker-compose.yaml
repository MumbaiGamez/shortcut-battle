version: "3"

services:
  www:
    container_name: shortcut-battle
    build:
      context: .
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "3000:3000"
    command: ${RUN_CMD}
    volumes:
      - .:/usr/app:rw
    restart: always
    networks:
      - netw
  postgres:
    container_name: postgres-12
    image: postgres:12
    ports:
      - "5432:5432"
    volumes:
      - postgresdata:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=users-data
      - PGUSER=${DB_USER}
    networks:
      - netw
    tty: true
  pgadmin:
    container_name: pgadmin-4
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    image: dpage/pgadmin4:4.29
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAUL_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_LISTEN_PORT=80
    ports:
      - "8080:80"
    volumes:
      - pgadmindata:/var/lib/pgadmin
    networks:
      - netw
  nginx:
    image: nginx:mainline-alpine
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx:/etc/nginx/conf.d:ro
      - ../certbot/www:/var/www/certbot:ro
      - ../certbot/conf:/etc/nginx/ssl:ro
    depends_on:
      - www
    networks:
      - netw
  certbot:
    image: certbot/certbot
    volumes:
      - ../certbot/www:/var/www/certbot:rw
      - ../certbot/conf:/etc/letsencrypt:rw

volumes:
  pgadmindata:
  postgresdata:

networks:
  netw:
    driver: bridge
